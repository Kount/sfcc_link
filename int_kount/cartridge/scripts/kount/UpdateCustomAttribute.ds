/**
*	This script update custom attribute in Order for Kount
*
*	@input eventData : Object
*	@input attrName : String
*	@output mailTo : String
*	@output orderStatus : String
*
*/
importPackage( dw.system );
importPackage( dw.order );

function execute( args : PipelineDictionary ) : Number {
	var eventData : Object = args.eventData,
		order : Order = OrderMgr.getOrder(eventData['orderNo']),
		kount = require('~/cartridge/scripts/kount/LibKount');
	if (!order) {
		return PIPELET_ERROR;
	}
	
	var attrName : String = !empty(args.attrName) ? args.attrName : eventData['attributeName'],
		attrValue : String = eventData['newValue'];
	
	if(attrName == "REASON_CODE"){
		attrValue = eventData["reasonCode"];
	}
	
	if(attrName == "Status"){
		var statusMap : Object = { A : 'APPROVED', D : 'DECLINED', R : 'HOLD', E : 'HOLD', C : 'CHANGE', X : 'TIME OUT', Y : 'TIME OUT PAYMENT' },
		attrValue = statusMap[eventData['newValue']];
		args.orderStatus = 'K_ENS-Status'+attrValue;
	}
	
	try{
		if (attrName != "Status" || order.custom.kount_Status == "HOLD") {
			order.custom["kount_"+attrName] = attrValue;
		}
		
		if( attrName == 'SCOR') {
			order.setExportStatus(order.EXPORT_STATUS_READY);
		}
		
	} catch(e){
		kount.writeExecutionError (new Error("KOUNT: UpdateCustomAttribute.ds: kount_" + attrName + " custom field wasn't save"), "Update Orders", "error");
		return PIPELET_ERROR;
	}
	
	args.mailTo = kount._getEmailList().join(",");
    return PIPELET_NEXT;
} 
