/**
*	Script returns node name that will be called depending on event name
*
*   @input Parameters : dw.web.HttpParameterMap 
*   @output NodeName : Object
*	@output EventDataMap : dw.util.ArrayList
*
*/
importPackage( dw.system );
importPackage( dw.net );
importPackage( dw.util );
importScript("int_kount:kount/KountUtils.ds");

function execute( args : PipelineDictionary ) : Number {
	var xmlBody : String = args.Parameters.getRequestBodyAsString();
    var kountUtils = new KountUtilsObject(),
		eventTypeMap : Object = { 
			SPECIAL_ALERT_TRANSACTION : 'K_ENS-SpecialAlertTransaction',
			WORKFLOW_STATUS_EDIT : 'K_ENS-WorkflowStatusEdit',
			WORKFLOW_REEVALUATE : 'K_ENS-WorkflowReevaluate',
			WORKFLOW_NOTES_ADD : 'K_ENS-WorkflowNotesAdd',
			RISK_CHANGE_SCOR : 'K_ENS-RiskChangeScor',
			RISK_CHANGE_REPLY : 'K_ENS-RiskChangeReply',
			RISK_CHANGE_VELO : 'K_ENS-RiskChangeVelo',
			RISK_CHANGE_VMAX : 'K_ENS-RiskChangeVmax',
			RISK_CHANGE_GEOX : 'K_ENS-RiskChangeGeox',
			RISK_CHANGE_NETW : 'K_ENS-RiskChangeNetw',
			RISK_CHANGE_REAS : 'K_ENS-RiskChangeReas'
		},
		xmlObjMap : ArrayList = kountUtils.parseEnsXMLtoObject(xmlBody, eventTypeMap);
	
	args.NodeName = eventTypeMap;
	args.EventDataMap = xmlObjMap;
    return PIPELET_NEXT;
}
