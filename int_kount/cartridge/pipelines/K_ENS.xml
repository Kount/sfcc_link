<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="EventClassifications">
    <segment>
      <node>
        <start-node call-mode="public" name="EventClassifications" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="dw.system.Site.getCurrent().getCustomPreferenceValue('kount_ENS')" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="kount/SelectEventNodeName.ds"/>
                <key-binding alias="Log" key="ScriptLog"/>
                <key-binding alias="CurrentHttpParameterMap" key="Parameters"/>
                <key-binding alias="S" key="S"/>
                <key-binding alias="NodeName" key="NodeName"/>
                <key-binding alias="EventData" key="EventData"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="source" x="1" y="2"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-key="NodeName"/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="kount/confirmationENS"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="SpecialAlertTransaction">
    <segment>
      <node>
        <start-node call-mode="private" name="SpecialAlertTransaction" secure="false"/>
        <node-display x="3" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="EventData.orderNo" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="source" x="1" y="2"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Send order confirmation email" pipelet-name="SendMail" pipelet-set-identifier="bc_api">
          <key-binding alias="&quot;noreply@demandware.net&quot;" key="MailFrom"/>
          <key-binding alias="&quot;mail/orderconfirmation&quot;" key="MailTemplate"/>
          <key-binding alias="Order.customerEmail" key="MailTo"/>
          <key-binding alias="&quot;Your order with Demandware online store&quot;" key="MailSubject"/>
          <key-binding alias="null" key="LocaleID"/>
          <key-binding alias="null" key="MailBCC"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="WorkflowStatusEdit">
    <segment>
      <node>
        <start-node call-mode="private" name="WorkflowStatusEdit" secure="false"/>
        <node-display x="5" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="kount/UpdateCustomAttribute.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="EventData" key="eventData"/>
          <key-binding alias="MailTo" key="mailTo"/>
          <key-binding alias="&quot;Status&quot;" key="attrName"/>
          <key-binding alias="orderStatus" key="orderStatus"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="EventData.orderNo" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-key="orderStatus"/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="WorkflowReevaluate">
    <segment>
      <node>
        <start-node call-mode="private" name="WorkflowReevaluate" secure="false"/>
        <node-display x="7" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="kount/UpdateCustomAttribute.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="EventData" key="eventData"/>
          <key-binding alias="MailTo" key="mailTo"/>
          <key-binding alias="&quot;SCOR&quot;" key="attrName"/>
          <key-binding alias="orderStatus" key="orderStatus"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="RiskChangeScor">
    <segment>
      <node>
        <start-node call-mode="private" name="RiskChangeScor" secure="false"/>
        <node-display x="9" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="4"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="3" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="K_ENS-UpdateCustomAttribute"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="RiskChangeReply">
    <segment>
      <node>
        <start-node call-mode="private" name="RiskChangeReply" secure="false"/>
        <node-display x="10" y="1"/>
      </node>
      <transition target-connector="in1" target-path="/RiskChangeScor.2"/>
    </segment>
  </branch>
  <branch basename="RiskChangeVelo">
    <segment>
      <node>
        <start-node call-mode="private" name="RiskChangeVelo" secure="false"/>
        <node-display x="11" y="1"/>
      </node>
      <transition target-connector="in1" target-path="/RiskChangeScor.2"/>
    </segment>
  </branch>
  <branch basename="RiskChangeVmax">
    <segment>
      <node>
        <start-node call-mode="private" name="RiskChangeVmax" secure="false"/>
        <node-display x="12" y="1"/>
      </node>
      <transition target-connector="in1" target-path="/RiskChangeScor.2"/>
    </segment>
  </branch>
  <branch basename="RiskChangeGeox">
    <segment>
      <node>
        <start-node call-mode="private" name="RiskChangeGeox" secure="false"/>
        <node-display x="13" y="1"/>
      </node>
      <transition target-connector="in3" target-path="/RiskChangeScor.2"/>
    </segment>
  </branch>
  <branch basename="RiskChangeNetw">
    <segment>
      <node>
        <start-node call-mode="private" name="RiskChangeNetw" secure="false"/>
        <node-display x="14" y="1"/>
      </node>
      <transition target-connector="in1" target-path="/RiskChangeScor.2"/>
    </segment>
  </branch>
  <branch basename="RiskChangeReas">
    <segment>
      <node>
        <start-node call-mode="private" name="RiskChangeReas" secure="false"/>
        <node-display x="15" y="1"/>
      </node>
      <transition target-connector="in1" target-path="/RiskChangeScor.2">
        <transition-display>
          <bend-point relative-to="source" x="0" y="4"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="CheckNotificationMailIsEnabled">
    <segment>
      <node>
        <start-node call-mode="private" name="CheckNotificationMailIsEnabled" secure="false"/>
        <node-display x="1" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="dw.system.Site.getCurrent().getCustomPreferenceValue('kount_'+EventData.name)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="error"/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateCustomAttribute">
    <segment>
      <node>
        <start-node call-mode="private" name="UpdateCustomAttribute" secure="false"/>
        <node-display x="3" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="kount/UpdateCustomAttribute.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="EventData" key="eventData"/>
          <key-binding alias="MailTo" key="mailTo"/>
          <key-binding alias="orderStatus" key="orderStatus"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="3" y="0"/>
              <bend-point relative-to="target" x="3" y="-2"/>
              <bend-point relative-to="target" x="3" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="K_ENS-CheckNotificationMailIsEnabled"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Send notification mail" pipelet-name="SendMail" pipelet-set-identifier="bc_api">
          <key-binding alias="&quot;noreply@demandware.net&quot;" key="MailFrom"/>
          <key-binding alias="&quot;mail/risk_change&quot;" key="MailTemplate"/>
          <key-binding alias="MailTo" key="MailTo"/>
          <key-binding alias="&quot;Notification mail&quot;" key="MailSubject"/>
          <key-binding alias="null" key="LocaleID"/>
          <key-binding alias="null" key="MailBCC"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="StatusDECLINED">
    <segment>
      <node>
        <start-node call-mode="private" name="StatusDECLINED" secure="false"/>
        <node-display x="6" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="FailOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="StatusAPPROVED">
    <segment>
      <node>
        <start-node call-mode="private" name="StatusAPPROVED" secure="false"/>
        <node-display x="8" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COPlaceOrder-PlaceOrder"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
